{"id":"index.js","dependencies":[{"name":"/home/adrian/WebDevProjects/Edinburgh College/Second year/OrganicMe Bootstrap 5/package.json","includedInParent":true,"mtime":1639647630006},{"name":"bootstrap","loc":{"line":1,"column":27},"parent":"/home/adrian/WebDevProjects/Edinburgh College/Second year/OrganicMe Bootstrap 5/src/index.js","resolved":"/home/adrian/WebDevProjects/Edinburgh College/Second year/OrganicMe Bootstrap 5/node_modules/bootstrap/dist/js/bootstrap.esm.js"}],"generated":{"js":"\"use strict\";\n\nvar bootstrap = _interopRequireWildcard(require(\"bootstrap\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar a = 1;\nvar b = 2;\nvar c = a + b;\nconsole.log(c);"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":3,"column":0},"source":"index.js","original":{"line":1,"column":0}},{"generated":{"line":9,"column":0},"source":"index.js","original":{"line":2,"column":0}},{"name":"a","generated":{"line":9,"column":4},"source":"index.js","original":{"line":2,"column":4}},{"generated":{"line":9,"column":5},"source":"index.js","original":{"line":2,"column":5}},{"generated":{"line":9,"column":8},"source":"index.js","original":{"line":2,"column":8}},{"generated":{"line":9,"column":9},"source":"index.js","original":{"line":2,"column":0}},{"generated":{"line":10,"column":0},"source":"index.js","original":{"line":3,"column":0}},{"name":"b","generated":{"line":10,"column":4},"source":"index.js","original":{"line":3,"column":4}},{"generated":{"line":10,"column":5},"source":"index.js","original":{"line":3,"column":5}},{"generated":{"line":10,"column":8},"source":"index.js","original":{"line":3,"column":8}},{"generated":{"line":10,"column":9},"source":"index.js","original":{"line":3,"column":0}},{"generated":{"line":11,"column":0},"source":"index.js","original":{"line":5,"column":0}},{"name":"c","generated":{"line":11,"column":4},"source":"index.js","original":{"line":5,"column":4}},{"generated":{"line":11,"column":5},"source":"index.js","original":{"line":5,"column":5}},{"name":"a","generated":{"line":11,"column":8},"source":"index.js","original":{"line":5,"column":8}},{"generated":{"line":11,"column":9},"source":"index.js","original":{"line":5,"column":9}},{"name":"b","generated":{"line":11,"column":12},"source":"index.js","original":{"line":5,"column":12}},{"generated":{"line":11,"column":13},"source":"index.js","original":{"line":5,"column":0}},{"name":"console","generated":{"line":12,"column":0},"source":"index.js","original":{"line":6,"column":0}},{"generated":{"line":12,"column":7},"source":"index.js","original":{"line":6,"column":7}},{"name":"log","generated":{"line":12,"column":8},"source":"index.js","original":{"line":6,"column":8}},{"generated":{"line":12,"column":11},"source":"index.js","original":{"line":6,"column":0}},{"name":"c","generated":{"line":12,"column":12},"source":"index.js","original":{"line":6,"column":12}},{"generated":{"line":12,"column":13},"source":"index.js","original":{"line":6,"column":0}}],"sources":{"index.js":"import * as bootstrap from 'bootstrap';\r\nlet a = 1;\r\nlet b = 2;\r\n\r\nlet c = a + b;\r\nconsole.log(c);\r\n"},"lineCount":null}},"error":null,"hash":"a215c38fb42ba807009fc56b5d757983","cacheData":{"env":{}}}